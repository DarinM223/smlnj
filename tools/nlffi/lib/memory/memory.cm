(* memory.cm
 *
 *   Primitives for "raw" memory access, allocation, and dynamic linkage.
 *
 * Copyright (c) 2004 by The Fellowship of SML/NJ
 *
 * Author: Matthias Blume (blume@tti-c.org)
 *)
(primitive)
Library
	signature CMEMORY
	structure CMemory
	signature DYN_LINKAGE
	structure DynLinkage
	structure MLRep
is

	$/basis.cm
	$smlnj/init/init.cmi : cm

	memaccess.sig
	memalloc.sig
	memory.sig
	bitop-fn.sml

# if defined (BIG_ENDIAN)
     	memaccess-64-big.sml
# elif defined (LITTLE_ENDIAN)
     	memaccess-64-little.sml
# else
# error Cannot determine endianess.
# endif

# if (defined(ARCH_X86) orelse defined(ARCH_SPARC) orelse defined(ARCH_PPC)) andalso (defined(OPSYS_UNIX) orelse defined(OPSYS_WIN32))

	memaccess-a4s2i4l4f4d8.sml
# elif defined(ARCH_AMD64)
  memaccess-a8s2i4l8f4d8.sml
# else
# error architecture not supported yet
# endif


# if defined(OPSYS_WIN32)
	main-lib-win32.sml
	memalloc-a4-win32.sml
# else
	main-lib-unix.sml
	memalloc-a4-unix.sml
# endif

	memory.sml

	(* mlrep-i32f64.sml *)
	mlrep-i64f64.sml
	linkage.sig
	linkage-dlopen.sml
