# mk.amd64-linux
#

SHELL =		/bin/sh

MAKE =		make
AS =		as --64
CC =		gcc -std=gnu99 -Wall
CFLAGS =	-O2 -m64 -no-pie
CXX =           g++ --std=c++17
CXX_FLAGS =     -g -O2 -no-pie
CPP =		gcc -x assembler-with-cpp -E -P
XOBJS =
XLIBS =		../c-libs/dl/libunix-dynload.a
LD_LIBS =	-lm -ldl
#CHECK_HEAP =	check-heap.o
XDEFS =
BASE_DEFS =
DEFS =		$(XDEFS) $(BASE_DEFS) -DARCH_AMD64 -DSIZE_64 \
		-DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN \
		-DINDIRECT_CFUNC
TARGET =	AMD64
VERSION =	v-amd64-linux
RUNTIME =	run.amd64-linux
STANDALONE =	runx.amd64-linux
STANDALONE_A =	runx.amd64-linux.a

BUILD_TARGETS =	$(RUNTIME) $(STANDALONE_A)

all:	        $(BUILD_TARGETS)

install:        $(BUILD_TARGETS)
	mv $(BUILD_TARGETS) ../../bin/.run/

$(RUNTIME):
	($(MAKE) CHECK_HEAP=$(CHECK_HEAP) RUNTIME="$(RUNTIME)" VERSION="$(VERSION)" AS="$(AS)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" $(RUNTIME))

$(STANDALONE):
	($(MAKE) RUNTIME="$(STANDALONE)" MAIN="standalone" VERSION="$(VERSION)" AS="$(AS)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" LDFLAGS="-Xlinker -r" $(STANDALONE))

$(STANDALONE_A):
	($(MAKE) RUNTIME_A="$(STANDALONE_A)" MAIN="standalone" VERSION="$(VERSION)" AS="$(AS)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" LDFLAGS="-Xlinker -r" $(STANDALONE_A))

